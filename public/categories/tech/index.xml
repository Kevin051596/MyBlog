<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on MonsterYU Blog</title>
    <link>https://yukai.netlify.app/categories/tech/</link>
    <description>Recent content in Tech on MonsterYU Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yukai.netlify.app/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Firebase DBD illustrated book - Database</title>
      <link>https://yukai.netlify.app/post/2023-05-10/</link>
      <pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-10/</guid>
      <description>此篇主要說明我是如何從 Firebase 的 storage 中上傳檔案與下載檔案 預先操作 引入 firebase 、 getFirestore 、 collection 等函示庫 設定 firebaseConfig ，用來提供 firebase 設定的資訊 初始化 firebase 功能 import firebase from &amp;#34;firebase/compat/app&amp;#34; import { collection } from &amp;#34;firebase/firestore&amp;#34; import</description>
    </item>
    
    <item>
      <title>Commands List</title>
      <link>https://yukai.netlify.app/post/2023-05-20/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-20/</guid>
      <description>官網 git 文件 首次使用必要指令 設定使用者名稱 設定使用者電子信箱 列出使用者資訊 git config --global user.name &amp;quot;your_username&amp;quot; git config --global user.email &amp;quot;your_email_address@example.com&amp;quot; git config --global --list 常見上傳流水線指令 初始化本地儲存庫 將檔案</description>
    </item>
    
    <item>
      <title>Google Map 商家資料爬取</title>
      <link>https://yukai.netlify.app/post/2023-05-21/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-21/</guid>
      <description>技能大綱 如何用 Selenium 點擊、滑動、鎖定元素 如何用 Python 製作 json 相關 Library：selenium、pandas、json、bs4、time 主要過程與介</description>
    </item>
    
    <item>
      <title>JavaScript 的同步、非同步技巧</title>
      <link>https://yukai.netlify.app/post/2023-05-19/</link>
      <pubDate>Fri, 19 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-19/</guid>
      <description>本篇主要說明為什麼 JavaScript 可以做到同步處理、非同步處理，以及如何代碼實現。 前言 JavaScript 屬於單線程的瀏覽器行程。意思是同時間只做一段代碼，也就是只能一件一</description>
    </item>
    
    <item>
      <title>Selenium 基礎語法</title>
      <link>https://yukai.netlify.app/post/2023-05-18/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-18/</guid>
      <description>介紹 Selenium 介紹： Selenium 是一個自動化工具，主要透過程式自動控制瀏覽器進行任何操作，如搜尋、點擊、滾動等。其腳本是由 Python、Java、C# 等語言撰</description>
    </item>
    
    <item>
      <title>An Example Post 2</title>
      <link>https://yukai.netlify.app/post/2023-05-12/</link>
      <pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-12/</guid>
      <description>此篇主要說明我是如何從 Firebase 的 database、realtime database 中獲取資料、修改資料、刪除資料、增加資料等操作 預先操作 引入 firebase 、 getFirestore 、 collection 等函示庫 設</description>
    </item>
    
    <item>
      <title>5 C&#43;&#43; STL Containers</title>
      <link>https://yukai.netlify.app/post/2023-05-24/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-24/</guid>
      <description>以下為作者在練 C++ 時，較常使用到的容器以及其函數，整理成這份文章幫助作者我統整大腦中這部分的資料。 其他如 Deque, List, Array 等詳細使用，可至網路上搜尋或於 C++</description>
    </item>
    
    <item>
      <title>無法推上遠端儲存庫</title>
      <link>https://yukai.netlify.app/post/2023-05-11/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-11/</guid>
      <description>錯誤紀錄 error: src refspec main does not match any error: failed to push some refs to [repo_url] 可能原因 遠端儲存庫沒有對應的分支 解決方法 將本地儲存庫待上傳的分支更名 git branch -m [old branch] [new branch] ! [rejected] main -&amp;gt; main (non-fast-forward) error: failed to</description>
    </item>
    
    <item>
      <title>An Example Post</title>
      <link>https://yukai.netlify.app/post/2023-05-13/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-13/</guid>
      <description>Testing Test T</description>
    </item>
    
    <item>
      <title>C&#43;&#43; String Operation</title>
      <link>https://yukai.netlify.app/post/2023-05-23/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-23/</guid>
      <description>String 刪除元素方式 erase() erase(iterator,刪除長度) erase(刪除起點,刪除終點)( 皆是 iterator ) #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; int main(){ vector&amp;lt;string&amp;gt; s1(2,&amp;#34;0123456789&amp;#34;); s1[0].erase(5); //012346789 s1[1].erase(5,3); //0123489 for(auto el:s1) cout&amp;lt;&amp;lt;el&amp;lt;&amp;lt;&amp;#34;\n&amp;#34;; vector&amp;lt;string&amp;gt; s2(2,&amp;#34;0123456789&amp;#34;); s2[0].erase(s[0].begin()+2); //013456789 s2[1].erase(s[1].begin()+2,s[1].end());</description>
    </item>
    
    <item>
      <title>Selenium 隨筆紀錄</title>
      <link>https://yukai.netlify.app/post/2023-05-16/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-16/</guid>
      <description>設置超時限制器 browser.set_page_load_timeout(20) browser.set_script_timeout(20) 隱藏瀏覽器日誌 edge_options = webdriver.EdgeOptions() edge_options.add_argument(&amp;#39;-disable-gpu&amp;#39;) edge_options.add_argument(&amp;#39;log-level=3&amp;#39;) browser = webdriver.Edge(&amp;#34;python/msedgedriver.exe&amp;#34;, options=edge_options) 瀏覽器頁面加載偵測 from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import expected_conditions as EC WebDriverWait(browser, 30).until(EC.presence_of_element_located((By.CLASS_NAME, &amp;#39;image&amp;#39;))) 破解反爬蟲網頁 我們可以先用正常手段進入</description>
    </item>
    
    <item>
      <title>複雜度 Complexity</title>
      <link>https://yukai.netlify.app/post/2023-05-22/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://yukai.netlify.app/post/2023-05-22/</guid>
      <description>複雜度 主要用來分析一個演算法的計算能力與記憶體空間， 藉此用以評價該程式的能力，進而提升其計算能力。 時間複雜度與空間複雜度 Time / Space Complexity 主要分為兩個</description>
    </item>
    
  </channel>
</rss>
